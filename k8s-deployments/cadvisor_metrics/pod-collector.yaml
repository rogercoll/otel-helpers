kind: ClusterRole
metadata:
  name: metrics-role
apiVersion: rbac.authorization.k8s.io/v1
rules:
- apiGroups: [""]
  resources:
  - nodes/metrics
  - nodes/stats
  - nodes/proxy
  verbs: ["get"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-scraper-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metrics-role
subjects:
- kind: ServiceAccount
  name: metrics-scraper-sa
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
data:
  otel-collector-config.yaml: |
    receivers:
      prometheus:
        config:
          scrape_configs:

            - job_name: 'kubernetes-nodes-cadvisor'
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: true
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - target_label: __address__
                  replacement: kubernetes.default.svc:443
                - source_labels: [__meta_kubernetes_node_name]
                  regex: (.+)
                  target_label: __metrics_path__
                  replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor

    processors:
      batch:

    exporters:
      debug:
        verbosity: normal

    service:
      pipelines:
        metrics:
          receivers:
            - prometheus
          processors:
            - batch
          exporters:
            - debug
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: otel-collector
spec:
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      serviceAccount: metrics-scraper-sa
      containers:
      - name: otel-collector
        image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib
        args:
          - "--config=/etc/otel-collector-config.yaml"
        ports:
          - containerPort: 8888  # collector metrics
        resources:
          requests:
            cpu: "50m"      # Minimal CPU request
            memory: "64Mi"  # Minimal memory request
          limits:
            cpu: "100m"     # Minimal CPU limit
            memory: "500Mi" # Minimal memory limit
        volumeMounts:
          - name: config
            mountPath: /etc/otel-collector-config.yaml
            subPath: otel-collector-config.yaml
      volumes:
        - name: config
          configMap:
            name: otel-collector-config
